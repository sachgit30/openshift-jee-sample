<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" metadata-complete="true">

    <display-name>Spring PetClinic</display-name>
    <description>Spring PetClinic sample application</description>

    <!-- When using Spring jpa, use the following: -->
  

    <!-- When using Spring JDBC, use the following: -->
    <!--  <context-param>
         <param-name>spring.profiles.active</param-name>
         <param-value>jdbc</param-value>
     </context-param>  -->

    <!--  the  CallMonitoringAspect counts invocations on classes with @Repository on them. Classes in spring-data-jpa don't have that annotation  -->
    <!--  When using Spring Data JPA, uncomment the following: -->
    <!--
        <context-param>
         <param-name>spring.profiles.active</param-name>
         <param-value>spring-data-jpa</param-value>
     </context-param>
     -->

    <!--
		- Location of the XML file that defines the root application context.
		- Applied by ContextLoaderListener.
	-->
    
    <!--
- Servlet that dispatches request to registered handlers (Controller implementations).
-->
    
    <!-- Dandelion servlet definition and mapping -->
   

    <!-- used to provide the ability to enter Chinese characters inside the Owner Form -->
   

    <!-- Dandelion filter definition and mapping -->
   
    <!-- Dandelion-Datatables filter, used for basic export -->
    

    <!--  	No need for welcome-file declaration here.
    		See inside spring/mvc-core-config.xml : 
    		<mvc:view-controller path="/" view-name="welcome" /> 
    -->

</web-app>
